# main.py
# Roda o Streamlit com verifica√ß√£o de diagn√≥stico

import sys
import os

# Adicionar diagn√≥stico de importa√ß√µes
def run_diagnostic():
    """Executa diagn√≥stico r√°pido das mudan√ßas."""
    try:
        # Verificar se os arquivos novos existem
        files_to_check = [
            'src/pdf_postprocessor.py',
            'src/core/pdf_finalizer.py'
        ]
        
        missing_files = []
        for file_path in files_to_check:
            if not os.path.exists(file_path):
                missing_files.append(file_path)
        
        if missing_files:
            print(f"‚ùå ERRO: Arquivos n√£o encontrados: {missing_files}")
            return False
            
        # Verificar se as fun√ß√µes novas existem
        try:
            from src.pdf_postprocessor import PDFPostProcessor
            if not hasattr(PDFPostProcessor, '_analyze_page_content'):
                print("‚ùå ERRO: Fun√ß√£o _analyze_page_content n√£o encontrada - c√≥digo antigo ativo!")
                return False
            if not hasattr(PDFPostProcessor, '_is_page_truly_empty'):
                print("‚ùå ERRO: Fun√ß√£o _is_page_truly_empty n√£o encontrada - c√≥digo antigo ativo!")
                return False
            print("‚úÖ Novo algoritmo carregado com sucesso!")
            return True
        except ImportError as e:
            print(f"‚ùå ERRO DE IMPORTA√á√ÉO: {e}")
            return False
            
    except Exception as e:
        print(f"‚ùå ERRO NO DIAGN√ìSTICO: {e}")
        return False

# Executar diagn√≥stico antes de iniciar o Streamlit
print("üîç Verificando deployment...")
diagnostic_result = run_diagnostic()

if not diagnostic_result:
    print("‚ö†Ô∏è AVISO: Problemas detectados no deployment!")

try:
    from src.interfaces.streamlit_ui import main #prod
    #from src.interfaces.streamlit_ui_dev import main #dev
    
    if __name__ == "__main__":
        main()
except Exception as e:
    print(f"‚ùå ERRO CR√çTICO ao iniciar Streamlit: {e}")
    print("üìã Informa√ß√µes de debug:")
    print(f"Python: {sys.version}")
    print(f"Working Dir: {os.getcwd()}")
    print(f"Files: {os.listdir('.')[:10]}...")  # Primeiros 10 arquivos
    raise